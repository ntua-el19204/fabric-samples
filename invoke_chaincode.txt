## --- 0) Bring the network up + create channel ---
./network.sh up createChannel

# --- 1) PATH + Fabric config ---
export PATH=${PWD}/../bin:$PATH
export FABRIC_CFG_PATH=${PWD}/../config/

# --- 2) Deploy chaincode (name = basic) ---
./network.sh deployCC -ccn basic -ccp ../accounts/chaincode-go -ccl go

# --- 3) Common env vars ---
export CORE_PEER_TLS_ENABLED=true
export ORDERER=localhost:7050
export ORDERER_TLS_CA="${PWD}/organizations/ordererOrganizations/example.com/orderers/orderer.example.com/msp/tlscacerts/tlsca.example.com-cert.pem"

export CHANNEL=mychannel
export CC_NAME=basic   # <- must match deployCC -ccn above

# --- 4) Org1 admin context ---
export CORE_PEER_LOCALMSPID="Org1MSP"
export CORE_PEER_TLS_ROOTCERT_FILE="${PWD}/organizations/peerOrganizations/org1.example.com/peers/peer0.org1.example.com/tls/ca.crt"
export CORE_PEER_MSPCONFIGPATH="${PWD}/organizations/peerOrganizations/org1.example.com/users/Admin@org1.example.com/msp"
export CORE_PEER_ADDRESS=localhost:7051

# --- 5) Sanity check ---
peer lifecycle chaincode querycommitted -C "$CHANNEL"

# --- 6) Invoke Init(firstAccount, accountCount, initValue) ---
peer chaincode invoke \
  -o "$ORDERER" --ordererTLSHostnameOverride orderer.example.com \
  --tls --cafile "$ORDERER_TLS_CA" \
  -C "$CHANNEL" -n "$CC_NAME" \
  --peerAddresses localhost:7051 --tlsRootCertFiles "${PWD}/organizations/peerOrganizations/org1.example.com/peers/peer0.org1.example.com/tls/ca.crt" \
  --peerAddresses localhost:9051 --tlsRootCertFiles "${PWD}/organizations/peerOrganizations/org2.example.com/peers/peer0.org2.example.com/tls/ca.crt" \
  -c '{"Args":["Init","0","1000","100"]}' \
  --waitForEvent

# --- 7) Query account0 ---
peer chaincode query \
  -C "$CHANNEL" -n "$CC_NAME" \
  -c '{"Args":["Query","account0"]}'

# --- 8) Transfer 25 from account0 -> account1 ---
peer chaincode invoke \
  -o "$ORDERER" --ordererTLSHostnameOverride orderer.example.com \
  --tls --cafile "$ORDERER_TLS_CA" \
  -C "$CHANNEL" -n "$CC_NAME" \
  --peerAddresses localhost:7051 --tlsRootCertFiles "${PWD}/organizations/peerOrganizations/org1.example.com/peers/peer0.org1.example.com/tls/ca.crt" \
  --peerAddresses localhost:9051 --tlsRootCertFiles "${PWD}/organizations/peerOrganizations/org2.example.com/peers/peer0.org2.example.com/tls/ca.crt" \
  -c '{"Args":["Transfer","account0","account1","25"]}' \
  --waitForEvent

# --- 9) Query balances again ---
peer chaincode query -C "$CHANNEL" -n "$CC_NAME" -c '{"Args":["Query","account0"]}'
peer chaincode query -C "$CHANNEL" -n "$CC_NAME" -c '{"Args":["Query","account1"]}'

